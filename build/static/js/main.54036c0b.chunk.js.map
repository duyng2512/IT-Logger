{"version":3,"sources":["component/layout/SearchBar.js","actions/logAction.js","actions/type.js","component/logs/LogItem.js","component/layout/PreLoader.js","component/logs/Logs.js","component/layout/Footer.js","component/layout/AddBtn.js","actions/techAction.js","component/tech/TechOptions.js","component/layout/AddLogModal.js","component/layout/EditLogModal.js","component/tech/AddTechModal.js","component/tech/TechItem.js","component/tech/ShowTechModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","Store.js","App.js","serviceWorker.js","index.js"],"names":["connect","searchLogs","text","dispatch","a","fetch","res","json","data","type","payload","response","statusText","searchInput","useRef","style","marginBottom","className","id","ref","onChange","current","value","placeholder","htmlFor","delLogs","console","log","method","headers","setCurrent","props","href","attention","onClick","fontSize","message","fontWeight","tech","format","date","PreLoader","state","getLogs","logs","loading","useEffect","height","length","map","eachLog","key","Footer","position","bottom","width","textAlign","AddBtn","getTechs","eachTech","firstName","lastName","addLogs","body","JSON","stringify","useState","msg","setMsg","setAttention","setTech","onChagne","event","target","name","disabled","checked","newLog","Date","M","toast","html","editLogs","clearCurrent","msgInput","createRef","focus","preventDefault","addTechs","setFirstName","setLastName","delTechs","e","initalState","error","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.54036c0b.chunk.js","sourcesContent":["import React, { Fragment, useRef } from 'react';\r\nimport { searchLogs } from '../../actions/logAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const searchInput = useRef();\r\n\r\n  const onChange = () => {\r\n    searchLogs(searchInput.current.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav style={{ marginBottom: '30px' }} className=\"blue\">\r\n        <div className=\"nav-wrapper\">\r\n          <form>\r\n            <div className=\"input-field\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"search\"\r\n                ref={searchInput}\r\n                onChange={onChange}\r\n                placeholder=\"Search logs...\"\r\n              />\r\n              <label className=\"label-icon\" htmlFor=\"search\">\r\n                <i className=\"material-icons\">search</i>\r\n              </label>\r\n              <i className=\"material-icons\">close</i>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  SEARCH_LOGS,\r\n} from './type';\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/logs');\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLogs = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/logs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const delLogs = (id) => async (dispatch) => {\r\n  console.log(id);\r\n  try {\r\n    setLoading();\r\n    await fetch(`/logs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editLogs = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`/logs/${log.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: log,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrent = (log) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  });\r\n};\r\n\r\nexport const clearCurrent = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_CURRENT,\r\n  });\r\n};\r\n","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import React, { Fragment } from 'react';\r\nimport Moment from 'react-moment';\r\nimport { delLogs, setCurrent } from '../../actions/logAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst LogItem = (props) => {\r\n  const { log, delLogs, setCurrent } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className=\"collection-item\">\r\n        <a\r\n          href=\"#edit-log-modal\"\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          }`}\r\n          onClick={() => {\r\n            setCurrent(log);\r\n          }}\r\n        >\r\n          {log.attention && (\r\n            <i className=\"large material-icons\" style={{ fontSize: '20px' }}>\r\n              announcement\r\n            </i>\r\n          )}\r\n\r\n          {log.message}\r\n        </a>\r\n        <br></br>\r\n        <span className=\"grey-text\">\r\n          <span className=\"black-text\">ID #{log.id}</span> last update by{' '}\r\n          <span\r\n            className=\"black-text text-darken-2\"\r\n            style={{ fontWeight: '600' }}\r\n          >\r\n            {log.tech} on{' '}\r\n            <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\r\n          </span>\r\n        </span>\r\n\r\n        <a\r\n          href=\"#!\"\r\n          className=\"secondary-content\"\r\n          onClick={() => {\r\n            delLogs(log.id);\r\n          }}\r\n        >\r\n          <i className=\"material-icons grey-text\">delete</i>\r\n        </a>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { delLogs, setCurrent })(LogItem);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst PreLoader = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"progress blue lighten-4\">\r\n        <div className=\"indeterminate blue\"></div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PreLoader;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport LogItem from '../logs/LogItem';\r\nimport PreLoader from '../layout/PreLoader';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from '../../actions/logAction';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return (\r\n      <Fragment>\r\n        <h5 className=\"blue-text\">Loading system logging data...</h5>\r\n        <PreLoader />\r\n        <div style={{ height: '300px' }}></div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <ul className=\"collection with-header\">\r\n          <li className=\"collection-header\">\r\n            <h4 className=\"center\">System logs</h4>\r\n          </li>\r\n          {!loading && logs.length === 0 ? (\r\n            <Fragment>\r\n              <h6 className=\"center\">Nothing to show...</h6>\r\n              <PreLoader />\r\n            </Fragment>\r\n          ) : (\r\n            logs.map((eachLog) => <LogItem key={eachLog.id} log={eachLog} />)\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div style={{ height: '200px' }}></div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Fragment>\r\n      <div style={{ position: 'absolute', bottom: '0', width: '100vw' }}>\r\n        <footer className=\"page-footer blue text-center\">\r\n          <h6 style={{ textAlign: 'center' }}>© 2020 Copyright </h6>\r\n          <div style={{ height: '20px' }}></div>\r\n        </footer>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className=\"fixed-action-btn\">\r\n      <a\r\n        href=\"#add-log-modal\"\r\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\r\n      >\r\n        <i className=\"large material-icons\">add</i>\r\n      </a>\r\n\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href=\"#tech-list-modal\"\r\n            className=\"btn-floating green modal-trigger\"\r\n          >\r\n            <i className=\"material-icons\">person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"#tech-modal\"\r\n            className=\"btn-floating grey darken-2 modal-trigger\"\r\n          >\r\n            <i className=\"material-icons\">person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBtn;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  TECHS_ERROR,\r\n  SET_LOADING,\r\n} from '../actions/type';\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    const res = await fetch('./techs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addTechs = (tech) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('./techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const delTechs = (id) => async (dispatch) => {\r\n  console.log('DELETE');\r\n  try {\r\n    setLoading();\r\n    await fetch(`./techs/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTechs } from '../../actions/techAction';\r\n\r\nconst TechOptions = ({ tech: { tech, loading }, getTechs }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n  }, []);\r\n\r\n  if (tech === null || loading) {\r\n    return <option>Loading...</option>;\r\n  }\r\n  if (tech !== null && tech.length === 0) {\r\n    return <option>There is none technician available.</option>;\r\n  }\r\n  return tech.map((eachTech) => (\r\n    <option\r\n      key={eachTech.id}\r\n      value={`${eachTech.firstName} ${eachTech.lastName}`}\r\n    >\r\n      {eachTech.firstName} {eachTech.lastName}\r\n    </option>\r\n  ));\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechOptions);\r\n","import '../layout/materialize-custom.css';\r\nimport './materialize-custom.css';\r\nimport React, { Fragment, useState } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport { addLogs } from '../../actions/logAction';\r\nimport TechOptions from '../tech/TechOptions';\r\n\r\nconst AddLogModal = ({ addLogs }) => {\r\n  const [msg, setMsg] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onChagne = (event) => {\r\n    if (event.target.name === 'msg') {\r\n      setMsg(event.target.value);\r\n    } else if (event.target.name === 'attention') {\r\n      setAttention(!attention);\r\n    } else if (event.target.name === 'tech') {\r\n      setTech(event.target.value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    if (msg === '' || tech === '') {\r\n      M.toast({ html: 'Please fill in all required fields' });\r\n      return;\r\n    } else {\r\n      const newLog = {\r\n        message: msg,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n      addLogs(newLog);\r\n      M.toast({ html: `Log added by ${tech} !` });\r\n      setTech('');\r\n      setMsg('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"add-log-modal\" className=\"modal modal-custom\">\r\n        <div className=\"modal-content\">\r\n          <h4 className=\"blue-text text-darken-2\">Enter System Log</h4>\r\n          {/** Message */}\r\n          <div className=\"row\">\r\n            <div className=\"input-field\">\r\n              <input type=\"text\" name=\"msg\" value={msg} onChange={onChagne} />\r\n              <label htmlFor=\"msg\" className=\"active blue-text text-darken-2\">\r\n                Log Message\r\n              </label>\r\n            </div>\r\n          </div>\r\n          {/** Select */}\r\n          <div className=\"row\">\r\n            <div className=\"input-field\">\r\n              <select\r\n                name=\"tech\"\r\n                value={tech}\r\n                className=\"browser-default blue-text text-darken-2\"\r\n                onChange={onChagne}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Technician\r\n                </option>\r\n                <TechOptions />\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/** Attention */}\r\n          <div className=\"row\">\r\n            <div className=\"input-field\">\r\n              <p>\r\n                <label>\r\n                  <input\r\n                    name=\"attention\"\r\n                    type=\"checkbox\"\r\n                    className=\"filled-in blue darken-1\"\r\n                    checked={attention}\r\n                    value={attention}\r\n                    onChange={onChagne}\r\n                  />\r\n                  <span className=\"blue-text text-darken-2\">\r\n                    Need attention ?\r\n                  </span>\r\n                </label>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {/** Modal Footer */}\r\n          <div className=\"modal-footer\">\r\n            <a\r\n              href=\"#!\"\r\n              onClick={onSubmit}\r\n              className=\"modal-close waves-effect waves-blue btn blue-btn blue darken-1\"\r\n            >\r\n              Enter\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addLogs })(AddLogModal);\r\n","import '../layout/materialize-custom.css';\r\nimport React, { Fragment, useState, useEffect, createRef } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport { editLogs, clearCurrent } from '../../actions/logAction';\r\nimport TechOptions from '../tech/TechOptions';\r\n\r\nconst EditLogModal = ({ log: { current }, editLogs, clearCurrent }) => {\r\n  const [msg, setMsg] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n  const msgInput = createRef();\r\n\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      msgInput.current.focus();\r\n      setMsg(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onChagne = (event) => {\r\n    if (event.target.name === 'msg') {\r\n      setMsg(event.target.value);\r\n    } else if (event.target.name === 'attention') {\r\n      setAttention(!attention);\r\n    } else if (event.target.name === 'tech') {\r\n      setTech(event.target.value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (msg === '' || tech === '') {\r\n      M.toast({ html: 'Please fill in all required fields' });\r\n    } else {\r\n      const newLog = {\r\n        message: msg,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n        id: current.id,\r\n      };\r\n      editLogs(newLog);\r\n      setMsg('');\r\n      setTech('');\r\n      setAttention(false);\r\n      clearCurrent();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"edit-log-modal\" className=\"modal modal-custom\">\r\n        <div className=\"modal-content\">\r\n          <h4 className=\"red-text text-darken-2\">Edit System Log</h4>\r\n          {/** Message */}\r\n          <div className=\"row\">\r\n            <div className=\"input-field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"msg\"\r\n                value={msg}\r\n                onChange={onChagne}\r\n                ref={msgInput}\r\n              />\r\n              <label htmlFor=\"msg\" className=\"active red-text text-darken-2\">\r\n                Log Message\r\n              </label>\r\n            </div>\r\n          </div>\r\n          {/** Select */}\r\n          <div className=\"row\">\r\n            <div className=\"input-field\">\r\n              <select\r\n                name=\"tech\"\r\n                value={tech}\r\n                className=\"browser-default red-text text-darken-2\"\r\n                onChange={onChagne}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Technician\r\n                </option>\r\n                <TechOptions />\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/** Attention */}\r\n          <div className=\"row\">\r\n            <div className=\"input-field\">\r\n              <p>\r\n                <label>\r\n                  <input\r\n                    name=\"attention\"\r\n                    type=\"checkbox\"\r\n                    className=\"filled-in red darken-1\"\r\n                    checked={attention}\r\n                    value={attention}\r\n                    onChange={onChagne}\r\n                  />\r\n                  <span className=\"red-text text-darken-2\">\r\n                    Need attention ?\r\n                  </span>\r\n                </label>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {/** Modal Footer */}\r\n          <div className=\"modal-footer\">\r\n            <a\r\n              href=\"#!\"\r\n              onClick={onSubmit}\r\n              className=\"modal-close waves-effect waves-red btn red-btn red darken-1\"\r\n            >\r\n              Enter\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { editLogs, clearCurrent })(\r\n  EditLogModal\r\n);\r\n","import '../layout/materialize-custom.css';\r\nimport React, { Fragment, useState } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './custom-component.css';\r\nimport { connect } from 'react-redux';\r\nimport { addTechs } from '../../actions/techAction';\r\n\r\nconst TechModal = ({ addTechs }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onChagne = (event) => {\r\n    if (event.target.name === 'firstName') {\r\n      setFirstName(event.target.value);\r\n    } else if (event.target.name === 'lastName') {\r\n      setLastName(event.target.value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    if (lastName === '' || firstName === '') {\r\n      M.toast({ html: 'Please fill in all required fields' });\r\n    } else {\r\n      setFirstName('');\r\n      setLastName('');\r\n      const newTech = {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n      };\r\n      addTechs(newTech);\r\n      M.toast({\r\n        html: `${firstName} ${lastName} technician have been added into database`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"tech-modal\" className=\"modal  modal-custom\">\r\n        <div className=\"modal-content modal-content-custom\">\r\n          <h4 className=\"grey-text darken-4\">Add New Technician</h4>\r\n          {/** First Name */}\r\n          <div className=\"row\">\r\n            <div className=\"input-field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={firstName}\r\n                onChange={onChagne}\r\n              />\r\n              <label htmlFor=\"firstName\" className=\"active grey-text darken-4\">\r\n                First Name\r\n              </label>\r\n            </div>\r\n          </div>\r\n          {/** Last Name */}\r\n          <div className=\"row\">\r\n            <div className=\"input-field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={lastName}\r\n                onChange={onChagne}\r\n              />\r\n              <label htmlFor=\"msg\" className=\"active grey-text darken-4\">\r\n                Last Name\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/** Modal Footer */}\r\n        <div className=\"modal-footer\">\r\n          <a\r\n            href=\"#!\"\r\n            onClick={onSubmit}\r\n            className=\"modal-close waves-effect waves-red btn red-btn grey darken-4 btn-custom\"\r\n          >\r\n            Add Technician\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addTechs })(TechModal);\r\n","import React, { Fragment } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { delTechs } from '../../actions/techAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TechItem = (props) => {\r\n  const lastName = props.tech.lastName;\r\n  const firstName = props.tech.firstName;\r\n  const id = props.tech.id;\r\n  const delTechs = props.delTechs;\r\n  const onClick = async () => {\r\n    M.toast({ html: 'Technician information deleted' });\r\n    delTechs(id);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className=\"collection-item\">\r\n        <i className=\"small material-icons green-text\">work</i>\r\n        <span style={{ fontWeight: '600' }}>\r\n          {firstName} {lastName}\r\n        </span>\r\n        <a href=\"#!\" className=\"secondary-content\" onClick={onClick}>\r\n          <i className=\"material-icons black-text\">delete</i>\r\n        </a>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { delTechs })(TechItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport TechItem from './TechItem';\r\nimport '../layout/materialize-custom.css';\r\nimport './custom-component.css';\r\nimport PreLoader from '../layout/PreLoader';\r\nimport { getTechs } from '../../actions/techAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ShowTechModal = ({ tech: { tech }, getTechs }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const deleteTech = (event) => {};\r\n\r\n  if (tech === null) {\r\n    return (\r\n      <Fragment>\r\n        <div id=\"tech-list-modal\" className=\"modal  modal-tech-custom\">\r\n          <div className=\"modal-content modal-content-custom\">\r\n            <h4 className=\"green-text darken-4\">Available Technician</h4>\r\n            <PreLoader />\r\n          </div>\r\n          {/** Modal Footer */}\r\n          <div className=\"modal-footer\">\r\n            <a\r\n              href=\"#!\"\r\n              onClick={(e) => {\r\n                console.log('Close Modal');\r\n              }}\r\n              className=\"modal-close waves-effect waves-red btn green-btn green darken-4 btn-custom\"\r\n            >\r\n              Close\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"tech-list-modal\" className=\"modal  modal-tech-custom\">\r\n        <div className=\"modal-content modal-content-custom\">\r\n          <h4 className=\"green-text darken-4\">Available Technician</h4>\r\n          <ul className=\"collection\">\r\n            {/**List of Available Technician*/}\r\n            {tech.map((eachTech) => (\r\n              <TechItem key={eachTech.id} tech={eachTech} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {/** Modal Footer */}\r\n        <div className=\"modal-footer\">\r\n          <a\r\n            href=\"#!\"\r\n            onClick={() => console.log('Close')}\r\n            className=\"modal-close waves-effect waves-red btn green-btn green darken-4 btn-custom\"\r\n          >\r\n            Close\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(ShowTechModal);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  SEARCH_LOGS,\r\n} from '../actions/type';\r\n\r\nconst initalState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(function (log) {\r\n          if (log.id !== action.payload) {\r\n            return log;\r\n          }\r\n        }),\r\n        loading: false,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map(function (log) {\r\n          if (log.id === action.payload.id) {\r\n            return action.payload;\r\n          } else {\r\n            return log;\r\n          }\r\n        }),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  TECHS_ERROR,\r\n  SET_LOADING,\r\n} from '../actions/type';\r\n\r\nconst initalState = {\r\n  tech: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        tech: action.payload,\r\n        loading: false,\r\n      };\r\n    case TECHS_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case ADD_TECH: {\r\n      return {\r\n        ...state,\r\n        tech: [...state.tech, action.payload],\r\n        loading: false,\r\n      };\r\n    }\r\n    case DELETE_TECH: {\r\n      return {\r\n        ...state,\r\n        tech: state.tech.filter((eachTech) => eachTech.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    }\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, Fragment } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nimport SearchBar from '../src/component/layout/SearchBar';\nimport Logs from '../src/component/logs/Logs';\nimport Footer from '../src/component/layout/Footer';\nimport AddBtn from '../src/component/layout/AddBtn';\nimport AddLogModal from '../src/component/layout/AddLogModal';\nimport EditLogModal from '../src/component/layout/EditLogModal';\nimport TechModal from '../src/component/tech/AddTechModal';\nimport ShowTechModal from '../src/component/tech/ShowTechModal';\nimport { Provider } from 'react-redux';\nimport store from '../src/Store';\n\nfunction App() {\n  useEffect(() => {\n    /** Initialize M js */\n    M.AutoInit();\n  });\n\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <AddLogModal />\n        <EditLogModal />\n        <TechModal />\n        <ShowTechModal />\n        <Logs />\n        <AddBtn />\n        <Footer />\n      </Fragment>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}